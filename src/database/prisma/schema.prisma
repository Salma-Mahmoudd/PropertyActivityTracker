generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         UserRole      @default(SALES_REP)
  status       UserStatus    @default(OFFLINE)
  accountStatus AccountStatus @default(ACTIVE)
  score        Int           @default(0)
  phone        String?
  avatarUrl    String        @default("https://ui-avatars.com/api/?name=User&background=random")
  lastSeen     DateTime?
  deletedAt    DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  activities   UserActivity[]

  @@index([email])
  @@index([role])
  @@index([status])
  @@index([accountStatus])
}

model Property {
  id           Int           @id @default(autoincrement())
  name         String?
  latitude     Float
  longitude    Float
  address      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  activities   UserActivity[]

  @@index([latitude, longitude])
}

model Activity {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  weight       Int
  icon         String?
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  userActivities UserActivity[]
}

model UserActivity {
  id         Int       @id @default(autoincrement())
  userId     Int
  propertyId Int
  activityId Int
  note       String?
  latitude   Float?
  longitude  Float?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  activity   Activity  @relation(fields: [activityId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
  @@index([activityId])
  @@index([createdAt])
  @@index([latitude, longitude])
}

enum UserRole {
  SALES_REP
  ADMIN
  MANAGER
}

enum UserStatus {
  ONLINE
  OFFLINE
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  DELETED
}
